---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/12/13 13:00
---

local entityManager = require("Framework.Entity.EntityManager")

local nextUuid = 1
local function uuid()
    -- TODO
    local id = nextUuid
    nextUuid = nextUuid + 1
    return tostring(id)
end

--- `remote` 对端 Entity rpc调用的封装代理
--- 调用对端 Entity 上的rpc, 使用 self.remote.{RpcMethod}(...)即可
--- 调用对端 Entity 上Component的rpc, 使用 self.remote.{RpcMethod}(...) 即可, ex. self.remote.SyncPosition(1, 1)
---@class EntityBase
---@field ENTITY_TYPE string
---@field eid string
---@field remote table
---#field client Client
---@field PropertyDef PropertyStruct|nil 属性类型定义
EntityBase = DefineClass("EntityBase")

function EntityBase.Register(cls, entityType, bBriefEntity)
    cls.ENTITY_TYPE = entityType or cls.__cname
    entityManager:registerEntity(cls.ENTITY_TYPE, cls, bBriefEntity)
end

function EntityBase.__create(entityId, props)
    props.eid = entityId
    return props
end

function EntityBase:ctor(entityId)
    self.eid = entityId or uuid()
    self.logger = Logger.new(string.format("[%s]", self.__cname))
    if not entityId then
        Log.Error(string.format("ctor entityId empty %s %s", debug.traceback()))
    end
    self.remote = nil
    self.spaceID = nil
    self.regionIndexForGM = 0
end

function EntityBase:OnCreate()
end

function EntityBase:onMsgSyncRegionIndexForGm(index)
    local oldRegionIndexForGM = self.regionIndexForGM
    self.regionIndexForGM = index
    if oldRegionIndexForGM ~= index then
        Game.EventSystem:PublishBehavior(_G.EEventTypes.NPC_HEAD_GM_CHANGE, self.eid)
    end
end

-- 只有主玩家有
function EntityBase:on_enter_space(space_id, info)
    self:OnEnterSpace(space_id, info)
end

-- 只有主玩家有
function EntityBase:on_leave_space(space_id)
    self:OnLeaveSpace(space_id)
end

---@private
function EntityBase:dtor()
    self.remote = nil
    Game.EntityManager:RemoveEntity(self)
end

function EntityBase:IsInSpace()
    return self.spaceID ~= nil
end

function EntityBase:OnEnterSpace(space_id, info)
    self.spaceID = space_id
end

function EntityBase:OnLeaveSpace(space_id)
    self.spaceID = nil
end

function EntityBase:CreateRemoteProxy()
    self.remote = OnlineRemoteProxy.new(self)
end

function EntityBase:CreateDummyRemoteProxy()
    self.remote = DummyRemoteProxy.new()
end